---
// Main page for Permaweb LLMs Builder
import "../styles/theme.css";
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta
			name="description"
			content="Interactive tool to select and curate Permaweb documentation into llms.txt format for AI training"
		/>
		<title>Permaweb LLMs Builder</title>

		<!-- Note: X-Frame-Options and CSP are configured in astro.config.mjs as HTTP headers -->
		
		<!-- Custom CSS for theme overrides -->
		<style>
			/* Custom theme overrides - will be applied via JavaScript */
			:root {
				--custom-primary: inherit;
				--custom-background: inherit;
				--custom-text: inherit;
			}

			/* Force light theme */
			[data-theme="light"] {
				color-scheme: light;
			}

			/* Force dark theme */
			[data-theme="dark"] {
				color-scheme: dark;
			}

			/* Custom color overrides */
			[data-custom-colors="true"] {
				--primary-color: var(--custom-primary);
				--background-color: var(--custom-background);
				--text-color: var(--custom-text);
			}

			[data-custom-colors="true"] body {
				background-color: var(--background-color) !important;
				color: var(--text-color) !important;
			}

			[data-custom-colors="true"] .main-container {
				background-color: var(--background-color) !important;
			}

			[data-custom-colors="true"] .text-secondary {
				color: var(--text-color) !important;
				opacity: 0.7;
			}

			[data-custom-colors="true"] .btn-primary {
				background-color: var(--primary-color) !important;
				border-color: var(--primary-color) !important;
			}

			[data-custom-colors="true"] .btn-primary:hover {
				background-color: var(--primary-color) !important;
				opacity: 0.9;
			}
		</style>
	</head>

	<body>
		<!-- Theme Toggle Button -->
		<button class="theme-toggle" aria-label="Toggle theme">
			<svg
				class="sun-icon"
				fill="none"
				stroke="currentColor"
				viewBox="0 0 24 24"
			>
				<circle cx="12" cy="12" r="5"></circle>
				<line x1="12" y1="1" x2="12" y2="3"></line>
				<line x1="12" y1="21" x2="12" y2="23"></line>
				<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
				<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
				<line x1="1" y1="12" x2="3" y2="12"></line>
				<line x1="21" y1="12" x2="23" y2="12"></line>
				<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
				<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
			</svg>
			<svg
				class="moon-icon"
				fill="none"
				stroke="currentColor"
				viewBox="0 0 24 24"
			>
				<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"
				></path>
			</svg>
		</button>

		<!-- Main Container -->
		<div class="main-container">
			<div class="main-content">
				<div id="header-content">
					<h1 style="margin-bottom: 0;">Permaweb LLMs Builder</h1>
					<p class="text-secondary" style="font-size: 13px; line-height: 1.5; margin-top: 8px; margin-bottom: 16px; max-width: 600px;">
						All these docs have been collected throughout the permaweb. Feel free to select which ones to fuel your LLM.
					</p>
				</div>

				<!-- Documentation Tree -->
				<div id="docs-tree">
					<!-- Loading skeleton -->
					<div id="loading-skeleton" class="loading-skeleton">
						<div class="loading-description">Loading documentation indexâ€¦</div>
						<div class="docs-summary skeleton-base skeleton-text-md"></div>
						<div class="tree-font">
							<!-- Site skeleton -->
							<div class="skeleton-site-row">
								<div class="skeleton-base skeleton-checkbox"></div>
								<div class="skeleton-base skeleton-text-lg"></div>
								<div class="skeleton-base skeleton-text-sm"></div>
							</div>
							<!-- Page skeletons -->
							<div class="skeleton-row skeleton-opacity-60">
								<div class="skeleton-base skeleton-checkbox"></div>
								<div class="skeleton-base skeleton-text-md"></div>
							</div>
							<div class="skeleton-row skeleton-opacity-40">
								<div class="skeleton-base skeleton-checkbox"></div>
								<div class="skeleton-base skeleton-text-md"></div>
							</div>
							<div class="skeleton-row skeleton-opacity-30">
								<div class="skeleton-base skeleton-checkbox"></div>
								<div class="skeleton-base skeleton-text-md"></div>
							</div>
							<!-- Another site skeleton -->
							<div class="skeleton-site-row">
								<div class="skeleton-base skeleton-checkbox"></div>
								<div class="skeleton-base skeleton-text-lg"></div>
								<div class="skeleton-base skeleton-text-sm"></div>
							</div>
							<!-- More page skeletons -->
							<div class="skeleton-row skeleton-opacity-60">
								<div class="skeleton-base skeleton-checkbox"></div>
								<div class="skeleton-base skeleton-text-md"></div>
							</div>
							<div class="skeleton-row skeleton-opacity-40">
								<div class="skeleton-base skeleton-checkbox"></div>
								<div class="skeleton-base skeleton-text-md"></div>
							</div>
						</div>
					</div>
					<!-- Will be populated by JavaScript -->
				</div>
			</div>
			<div class="bottom-controls">
				<div class="progress-container" id="progress-container" style="display: none;">
					<div class="progress-bar">
						<div class="progress-fill" id="progress-fill"></div>
					</div>
					<div class="progress-text" id="progress-text">
						Processing...
					</div>
				</div>
				<div class="selection-counter">
					<div
						class="selection-header"
						onclick="toggleSelectionDetails()"
					>
						<div class="flex-center-gap">
							<strong id="selection-count">0</strong> pages selected
							<svg
								id="selection-toggle"
								class="icon-12 icon-transition"
								viewBox="0 0 24 24"
								fill="none"
								xmlns="http://www.w3.org/2000/svg"
							>
								<path
									fill-rule="evenodd"
									clip-rule="evenodd"
									d="M13.9394 12.0001L8.46973 6.53039L9.53039 5.46973L16.0607 12.0001L9.53039 18.5304L8.46973 17.4697L13.9394 12.0001Z"
									fill="#666"></path>
							</svg>
						</div>
						<div
							id="estimated-chars"
							class="selection-estimated-chars"
						>
						</div>
					</div>
					<div
						id="selection-details"
						class="selection-details"
					>
						<div
							id="selected-pages-list"
							class="text-medium text-secondary"
						>
						</div>
					</div>
				</div>
				<div class="action-buttons">
					<button class="btn btn-primary" id="generate-btn" disabled>
						<svg class="globe-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
							<circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="1.5"/>
							<path d="M2 12h20" stroke="currentColor" stroke-width="1.5"/>
							<path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z" stroke="currentColor" stroke-width="1.5"/>
						</svg>
						Generate llms.txt
					</button>
					<button class="btn btn-transparent" id="select-all-btn"> Select All </button>
					<button class="btn btn-transparent" id="clear-all-btn"> Clear All </button>
				</div>
			</div>
		</div>

		<!-- Main JavaScript -->
		<script src="../scripts/main.ts"></script>
		
		<!-- Theme initialization script -->
		<script>
			// Initialize theme and query parameters on page load
			(function() {
				const urlParams = new URLSearchParams(window.location.search);
				
				// ===== THEME HANDLING =====
				const theme = urlParams.get('theme') || 'auto';
				const validThemes = ['auto', 'light', 'dark', 'system'];
				const finalTheme = validThemes.includes(theme) ? theme : 'auto';
				
				// Apply theme
				if (finalTheme === 'dark') {
					document.documentElement.classList.add('dark');
					document.body.classList.add('dark');
					document.body.setAttribute('data-theme', 'dark');
				} else if (finalTheme === 'light') {
					document.documentElement.classList.remove('dark');
					document.body.classList.remove('dark');
					document.body.setAttribute('data-theme', 'light');
				} else if (finalTheme === 'system' || finalTheme === 'auto') {
					// Use system preference
					if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
						document.documentElement.classList.add('dark');
						document.body.classList.add('dark');
						document.body.setAttribute('data-theme', 'dark');
					} else {
						document.body.setAttribute('data-theme', 'light');
					}
				}
				
				// Listen for system theme changes
				if (finalTheme === 'system' || finalTheme === 'auto') {
					window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
						if (e.matches) {
							document.documentElement.classList.add('dark');
							document.body.classList.add('dark');
							document.body.setAttribute('data-theme', 'dark');
						} else {
							document.documentElement.classList.remove('dark');
							document.body.classList.remove('dark');
							document.body.setAttribute('data-theme', 'light');
						}
					});
				}
				
				// ===== CUSTOM COLORS =====
				const customPrimary = urlParams.get('primary');
				const customBackground = urlParams.get('background');
				const customText = urlParams.get('text');
				
				if (customPrimary || customBackground || customText) {
					document.body.setAttribute('data-custom-colors', 'true');
					
					// Apply custom colors via CSS custom properties
					const root = document.documentElement;
					if (customPrimary) {
						root.style.setProperty('--custom-primary', customPrimary);
					}
					if (customBackground) {
						root.style.setProperty('--custom-background', customBackground);
					}
					if (customText) {
						root.style.setProperty('--custom-text', customText);
					}
				}
				
				// ===== MINIMAL MODE =====
				const isMinimal = urlParams.get('minimal') === 'true';
				if (isMinimal) {
					const headerContent = document.getElementById('header-content');
					if (headerContent) {
						headerContent.style.display = 'none';
					}
				}
			})();
		</script>
	</body>
</html>
