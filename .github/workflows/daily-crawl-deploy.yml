name: 📅 Daily Documentation Index Update

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:  # Manual trigger

defaults:
  run:
    shell: bash

jobs:
  update-documentation-index:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    # Prevent multiple index update operations from running simultaneously
    concurrency:
      group: daily-index-update
      cancel-in-progress: false
    
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        
      - name: 🧅 Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile
        
      - name: 👀 Environment info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "SHA:        ${{ github.sha }}"
          echo "Bun ver:    $(bun --version)"
          echo "Node ver:   $(node --version)"
          echo "Crawl time: $(date)"
        
      - name: 🕷️ Run documentation crawl
        run: |
          echo "🕷️ Starting documentation crawl..."
          bun run crawl --force-reindex
          echo "✅ Crawl completed successfully!"
        env:
          NODE_ENV: production
        
      - name: ✅ Verify crawl output
        run: |
          if [ ! -f "public/docs-index.json" ]; then
            echo "❌ Crawl failed - no output file generated"
            exit 1
          fi
          
          echo "📊 Crawl statistics:"
          echo "   File size: $(du -h public/docs-index.json | cut -f1)"
          echo "   Line count: $(wc -l < public/docs-index.json)"
          echo "   Last modified: $(date -r public/docs-index.json)"
          
          # Basic JSON validation
          if ! bun -e "JSON.parse(await Bun.file('public/docs-index.json').text())"; then
            echo "❌ Generated JSON is invalid"
            exit 1
          fi
          
          echo "✅ Crawl output validation passed!"
          

          
      - name: 🚀 Deploy index to ArNS (JSON Only)
        id: deploy_index_arns
        run: |
          echo "📊 Deploying crawled index JSON to dedicated ArNS undername..."
          
          # Verify crawl output exists
          if [ ! -f "public/docs-index.json" ]; then
            echo "❌ Crawl index file not found"
            exit 1
          fi
          
          # Create deployment folder with only the JSON file
          mkdir -p index-deploy
          cp public/docs-index.json index-deploy/
          
          echo "📊 Index deployment contents:"
          ls -la index-deploy/
          du -h index-deploy/docs-index.json
          
          npx permaweb-deploy \
            --undername=index \
            --ant-process=${{ secrets.ANT_PROCESS }} \
            --deploy-folder=index-deploy \
            --verbose
          
          echo "deployment_url=https://index_permaweb-llms-builder.ar.io" >> $GITHUB_OUTPUT
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          ANT_PROCESS: ${{ secrets.ANT_PROCESS }}
          

          
      - name: 📝 Report crawl & deployment summary
        run: |
          echo "## 📊 Daily Documentation Index Update" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Index file size**: $(du -h public/docs-index.json | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "- **Total entries**: $(wc -l < public/docs-index.json)" >> $GITHUB_STEP_SUMMARY
          echo "- **JSON deployment**: $(du -h index-deploy/docs-index.json | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "- **JSON endpoint**: ✅ ${{ steps.deploy_index_arns.outputs.deployment_url }}/docs-index.json" >> $GITHUB_STEP_SUMMARY
          
          echo ""
          echo "🎉 Daily documentation index update complete!"
          echo "JSON endpoint: ${{ steps.deploy_index_arns.outputs.deployment_url }}/docs-index.json" 